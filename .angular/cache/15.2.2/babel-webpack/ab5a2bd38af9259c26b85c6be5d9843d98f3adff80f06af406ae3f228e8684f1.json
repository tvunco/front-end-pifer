{"ast":null,"code":"import _asyncToGenerator from \"D:/Argentina Programa/proyecto integrador/pifer/Front-End/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref, uploadBytes, list, getDownloadURL } from \"@angular/fire/storage\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageService {\n  constructor(storage) {\n    this.storage = storage;\n    this.url = \";\";\n  }\n  uploadImage($event, name) {\n    const file = $event.target.files[0];\n    ///console.log(file);\n    const imgRef = ref(this.storage, `imagen/` + name);\n    uploadBytes(imgRef, file).then(response => {\n      this.getImages();\n    }).catch(error => console.log(error));\n  }\n  getImages() {\n    var _this = this;\n    const imagesRef = ref(this.storage, 'imagen');\n    list(imagesRef).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        for (let item of response.items) {\n          _this.url = yield getDownloadURL(item);\n          console.log(\"La URL es: \" + _this.url);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(error => console.log(error));\n  }\n}\nImageService.ɵfac = function ImageService_Factory(t) {\n  return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n};\nImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageService,\n  factory: ImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAAkBA,GAAG,EAAEC,WAAW,EAAEC,IAAI,EAAEC,cAAc,QAAQ,uBAAuB;;;AAIvF,OAAM,MAAOC,YAAY;EAEvBC,YAAqBC,OAAgB;IAAhB,YAAO,GAAPA,OAAO;IAD9B,QAAG,GAAS,GAAG;EAC6B;EAEnCC,WAAW,CAACC,MAAU,EAAEC,IAAY;IAC7C,MAAMC,IAAI,GAAGF,MAAM,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC;IACA,MAAMC,MAAM,GAAGb,GAAG,CAAC,IAAI,CAACM,OAAO,EAAE,SAAS,GAAEG,IAAI,CAAE;IAClDR,WAAW,CAACY,MAAM,EAAEH,IAAI,CAAC,CACxBI,IAAI,CAACC,QAAQ,IAAG;MAAE,IAAI,CAACC,SAAS,EAAE;IAAA,CAAC,CAAC,CACpCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAEjC;EACAF,SAAS;IAAA;IACP,MAAMK,SAAS,GAAGrB,GAAG,CAAC,IAAI,CAACM,OAAO,EAAE,QAAQ,CAAC;IAC7CJ,IAAI,CAACmB,SAAS,CAAC,CACdP,IAAI;MAAA,6BAAC,WAAMC,QAAQ,EAAG;QAAG,KAAI,IAAIO,IAAI,IAAIP,QAAQ,CAACQ,KAAK,EAAC;UACvD,KAAI,CAACC,GAAG,SAASrB,cAAc,CAACmB,IAAI,CAAC;UACrCH,OAAO,CAACC,GAAG,CAAC,aAAa,GAAG,KAAI,CAACI,GAAG,CAAC;;MAEzC,CAAC;MAAA;QAAA;MAAA;IAAA,IAAC,CACCP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACrC;;AAtBWd,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAqB,SAAZrB,YAAY;EAAAsB,YAFX;AAAM","names":["ref","uploadBytes","list","getDownloadURL","ImageService","constructor","storage","uploadImage","$event","name","file","target","files","imgRef","then","response","getImages","catch","error","console","log","imagesRef","item","items","url","factory","providedIn"],"sourceRoot":"","sources":["D:\\Argentina Programa\\proyecto integrador\\pifer\\Front-End\\src\\app\\service\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Storage, ref, uploadBytes, list, getDownloadURL } from \"@angular/fire/storage\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\nurl: string=\";\"\n  constructor( private storage: Storage ) { }\n\n  public uploadImage($event:any, name: string){\nconst file = $event.target.files[0]\n///console.log(file);\nconst imgRef = ref(this.storage, `imagen/`+ name )\nuploadBytes(imgRef, file)\n.then(response => {this.getImages()})\n.catch(error => console.log(error))\n\n  }\n  getImages(){\n    const imagesRef = ref(this.storage, 'imagen')\n    list(imagesRef)\n    .then(async response => { for(let item of response.items){\n      this.url = await getDownloadURL(item);\n      console.log(\"La URL es: \" + this.url);\n    }\n  })\n    .catch(error => console.log(error))\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}