{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nlet InterceptorService = class InterceptorService {\n  constructor(tokenService) {\n    this.tokenService = tokenService;\n  }\n  intercept(req, next) {\n    let intReq = req;\n    const token = this.tokenService.getToken();\n    if (token != null) {\n      intReq = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer' + token)\n      });\n    }\n    return next.handle(intReq);\n  }\n};\nInterceptorService = __decorate([Injectable({\n  providedIn: 'root'\n})], InterceptorService);\nexport { InterceptorService };\nexport const interceptorProvider = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: InterceptorService,\n  multi: true\n}];","map":{"version":3,"mappings":";AAAA,SAA8CA,iBAAiB,QAAQ,sBAAsB;AAQtF,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAC3BC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAAgB;EAEhDC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,IAAIC,MAAM,GAAGF,GAAG;IAChB,MAAMG,KAAK,GAAG,IAAI,CAACL,YAAY,CAACM,QAAQ,EAAE;IAC1C,IAAGD,KAAK,IAAI,IAAI,EAAC;MACbD,MAAM,GAACF,GAAG,CAACK,KAAK,CAAC;QACbC,OAAO,EAAEN,GAAG,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,QAAQ,GAACJ,KAAK;OAC3D,CAAC;;IAEN,OAAOF,IAAI,CAACO,MAAM,CAACN,MAAM,CAAC;EAC9B;CAEH;AAdYN,kBAAkB,eAH9Ba,UAAU,CAAC;EACRC,UAAU,EAAE;CACf,CAAC,GACWd,kBAAkB,CAc9B;SAdYA,kBAAkB;AAgB/B,OAAO,MAAMe,mBAAmB,GAAG,CAAC;EAChCC,OAAO,EAAEjB,iBAAiB;EAC1BkB,QAAQ,EAAEjB,kBAAkB;EAC5BkB,KAAK,EAAC;CACT,CAAC","names":["HTTP_INTERCEPTORS","InterceptorService","constructor","tokenService","intercept","req","next","intReq","token","getToken","clone","headers","set","handle","Injectable","providedIn","interceptorProvider","provide","useClass","multi"],"sourceRoot":"","sources":["D:\\Argentina Programa\\proyecto integrador\\pifer\\Front-End\\src\\app\\service\\interseptor-service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { TokenService } from \"./token.service\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InterceptorService {\n    constructor(private tokenService: TokenService){}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n        let intReq = req;\n        const token = this.tokenService.getToken();\n        if(token != null){\n            intReq=req.clone({\n                headers: req.headers.set('Authorization', 'Bearer'+token)\n            });\n        }\n        return next.handle(intReq);\n    }\n\n}\n\nexport const interceptorProvider = [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: InterceptorService,\n    multi:true\n}];"]},"metadata":{},"sourceType":"module","externalDependencies":[]}